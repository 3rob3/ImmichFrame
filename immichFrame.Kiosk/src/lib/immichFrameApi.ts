/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/Asset": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetAsset"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/Asset/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetImage"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        AssetFaceWithoutPersonResponseDto: {
            /** Format: int32 */
            boundingBoxX1?: number;
            /** Format: int32 */
            boundingBoxX2?: number;
            /** Format: int32 */
            boundingBoxY1?: number;
            /** Format: int32 */
            boundingBoxY2?: number;
            /** Format: uuid */
            id: string;
            /** Format: int32 */
            imageHeight?: number;
            /** Format: int32 */
            imageWidth?: number;
            additionalProperties?: {
                [key: string]: unknown;
            } | null;
        };
        AssetResponseDto: {
            checksum: string;
            deviceAssetId: string;
            deviceId: string;
            duplicateId?: string | null;
            duration: string;
            exifInfo?: components["schemas"]["ExifResponseDto"];
            /** Format: date-time */
            fileCreatedAt: string;
            /** Format: date-time */
            fileModifiedAt: string;
            hasMetadata?: boolean;
            id: string;
            isArchived?: boolean;
            isFavorite?: boolean;
            isOffline?: boolean;
            isTrashed?: boolean;
            /** @deprecated */
            libraryId?: string | null;
            livePhotoVideoId?: string | null;
            /** Format: date-time */
            localDateTime: string;
            originalFileName: string;
            originalMimeType?: string | null;
            originalPath: string;
            owner?: components["schemas"]["UserResponseDto"];
            ownerId: string;
            people?: components["schemas"]["PersonWithFacesResponseDto"][] | null;
            /** @deprecated */
            resized?: boolean;
            smartInfo?: components["schemas"]["SmartInfoResponseDto"];
            stack?: components["schemas"]["AssetStackResponseDto"];
            tags?: components["schemas"]["TagResponseDto"][] | null;
            thumbhash?: string | null;
            type: components["schemas"]["AssetTypeEnum"];
            unassignedFaces?: components["schemas"]["AssetFaceWithoutPersonResponseDto"][] | null;
            /** Format: date-time */
            updatedAt: string;
            additionalProperties?: {
                [key: string]: unknown;
            } | null;
        };
        AssetStackResponseDto: {
            /** Format: int32 */
            assetCount?: number;
            id: string;
            primaryAssetId: string;
            additionalProperties?: {
                [key: string]: unknown;
            } | null;
        };
        /**
         * Format: int32
         * @enum {integer}
         */
        AssetTypeEnum: 0 | 1 | 2 | 3;
        ExifResponseDto: {
            city?: string | null;
            country?: string | null;
            /** Format: date-time */
            dateTimeOriginal?: string | null;
            description?: string | null;
            /** Format: double */
            exifImageHeight?: number | null;
            /** Format: double */
            exifImageWidth?: number | null;
            exposureTime?: string | null;
            /** Format: double */
            fNumber?: number | null;
            /** Format: int64 */
            fileSizeInByte?: number | null;
            /** Format: double */
            focalLength?: number | null;
            /** Format: double */
            iso?: number | null;
            /** Format: double */
            latitude?: number | null;
            lensModel?: string | null;
            /** Format: double */
            longitude?: number | null;
            make?: string | null;
            model?: string | null;
            /** Format: date-time */
            modifyDate?: string | null;
            orientation?: string | null;
            projectionType?: string | null;
            /** Format: double */
            rating?: number | null;
            state?: string | null;
            timeZone?: string | null;
            additionalProperties?: {
                [key: string]: unknown;
            } | null;
        };
        PersonWithFacesResponseDto: {
            /** Format: date-time */
            birthDate?: string | null;
            faces: components["schemas"]["AssetFaceWithoutPersonResponseDto"][];
            id: string;
            isHidden?: boolean;
            name: string;
            thumbnailPath: string;
            /** Format: date-time */
            updatedAt?: string;
            additionalProperties?: {
                [key: string]: unknown;
            } | null;
        };
        SmartInfoResponseDto: {
            objects?: string[] | null;
            tags?: string[] | null;
            additionalProperties?: {
                [key: string]: unknown;
            } | null;
        };
        TagResponseDto: {
            color?: string | null;
            /** Format: date-time */
            createdAt: string;
            id: string;
            name: string;
            parentId?: string | null;
            /** Format: date-time */
            updatedAt: string;
            value: string;
            additionalProperties?: {
                [key: string]: unknown;
            } | null;
        };
        /**
         * Format: int32
         * @enum {integer}
         */
        UserAvatarColor: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9;
        UserResponseDto: {
            avatarColor: components["schemas"]["UserAvatarColor"];
            email: string;
            id: string;
            name: string;
            profileImagePath: string;
            additionalProperties?: {
                [key: string]: unknown;
            } | null;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    GetAsset: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": components["schemas"]["AssetResponseDto"];
                    "application/json": components["schemas"]["AssetResponseDto"];
                    "text/json": components["schemas"]["AssetResponseDto"];
                };
            };
        };
    };
    GetImage: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
